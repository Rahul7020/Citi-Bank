#include <iostream>
using namespace std;

class Check
{
  private:
    int i;
  public:
    Check(): i(3) {  }
    Check operator -- ()
    {
        Check temp;
        Temp.i = --i;
        return temp;
    }

    // Notice int inside barcket which indicates postfix decrement.
    Check operator -- (int)
    {
        Check temp;
        Temp.i = i--;
        return temp;
    }

    void Display()
    { cout << "i = "<< i <<endl; }
};

int main()
{
    Check obj, obj1;    
    obj.Display(); 
    obj1.Display();

    // Operator function is called, only then value of obj is assigned to object1
    obj1 = --object1;
    obj.Display();
    obj1.Display();

    // assigns value of obj to obj1, only then operation function is called.
    obj1 = obj--;
    obj.Display();
    obj1.Display();

    return 0;
}
+#include<iostream.h>
+#include<conio.h>
+#include<stdlib.h>
+#include<stdio.h>
+#include<time.h>
 
-# Node artifact files
-node_modules/
-dist/
+void draw_line(int n, char ch);
+void board();
+void gamescore(char name1[], char name2[], int p1, int p2);
+void play_dice(int & score);
 
-# compiled Java class files
-*.class
+void main()
+{
+    int player1 = 0, player2 = 0, lastposition;
+    char player1name[80], player2name[80];
+    clrscr();
+    randomize();
+    draw_line(50, '=');
+    cout << "\n\n\n\n\t\tSNAKE LADDER GAME\n\n\n\n";
+    draw_line(50, '=');
+    cout << "\n\n\nEnter Name of player 1 :";
+    gets(player1name);
+    cout << "\n\n\Enter Name of player 2 :";
+    gets(player2name);
+    while (player1 <= 100 && player2 <= 100) 
+	{
+        board();
+        gamescore(player1name, player2name, player1, player2);
+        cout << "\n\n--->" << player1name << " Now your Turn >> Press any key to play ";
+        getch();
+        lastposition = player1;
+        play_dice(player1);
+        if (player1 < lastposition)
+            cout << "\n\aOops!! Snake found !! You are at postion " << player1 << "\n";
+        else if (player1 > lastposition + 6)
+            cout << "\nGreat!! you got a ladder !! You are at position " << player1;#
+        include < iostream.h >
+            cout << "\n\n--->" << player2name << " Now your Turn >> Press any key to play ";
+        getch();
+        lastposition = player2;
+        play_dice(player2);
+        if (player2 < lastposition)
+            cout << "\n\n\aOops!! Snake found !! You are at position " << player2 << "\n";
+        else if (player2 > lastposition + 6)
+            cout << "\n\nGreat!! you got a ladder !! You are at position " << player2 << "\n";
+        getch();
+    }
+    clear scroll();
+    cout << "\n\n\n";
+    draw_line(50, '+');
+    cout << "\n\n\t\tRESULT\n\n";
+    draw_line(50, '+');
+    cout << endl;
+    gamescore(player1name, player2name, player1, player2);
+    cout << "\n\n\n";
+    if (player1 >= player2)
+        cout << player1name << " !! You are the winner of the game\n\n";
+    else
+        cout << player2name << " !! You are the winner of the game\n\n";
+    draw_line(50, '+');
+    getch();
+}
+void draw_line(int n, char ch) 
+{
+    for (int i = 0; i < n; i++)
+        cout << ch;
+}
 
-# Compiled Python bytecode
-*.py[cod]
+void board() 
+{
+    clrscr();
+    cout << "\n\n";
+    draw_line(50, '-');
+    cout << "\n\t\tSNAKE AT POSITION\n";
+    draw_line(50, '-');
+    cout << "\n\tFrom 98 to 28 \n\tFrom 95 to 24\n\tFrom 92 to 51\n\tFrom 83 to 19\n\tFrom 73 to 1\n\t
+    cout From 69 to 33\n\tFrom 64 to 36\n\tFrom 59 to 17\n\tFrom 55 to 7\n\tFrom 52 to 11\n\tFrom 48 to 9\n\tFrom 46 to 5\n\tFrom 44 to 22\n\n";
+    draw_line(50, '-');
+    cout << "\n\t\t LADDER AT POSITION\n";
+    draw_line(50, '-');
+    cout << "\n\tFrom 8 to 26\n\tFrom 21 to 82\n\tFrom 43 to 77\n\tFrom 50 to 91\n\tFrom 62 to 96\n\tFrom 66 to 87\n\tFrom 80 to 100\n";
+    draw_line(50, '-');
+    cout << endl;
+}
 
-# Log files
-*.log
-
-# Package files
-*.jar
-
-target/
-dist/
-
-# JetBrains IDE
-.idea/
-
-# Unit test reports
-TEST*.xml
-
-# Generated by MacOS
-.DS_Store
-
-# Generated by Windows
-Thumbs.db
-
-# Applications
-*.app
-*.exe
-*.war
-
-# Large media files
-*.mp4
-*.tiff
-*.avi
-*.flv
-*.mov
-*.wmv
+void gamescore(char name1[], char name2[], int p1, int p2) 
+{
+    cout << "\n";
+    draw_line(50, '~');
+    cout << "\n\t\tBANK STATUS\n";
+    draw_line(50, '~');
+    cout << "\n\t--->" << name1 << " is at position " << p1 << endl;
+    cout << "\t--->" << name2 << " is at position " << p2 << endl;
+    draw_line(50, '_');
+    cout << endl;
+}
+void playdice(int & score) 
+{
+    int dice;
+    dice = random(6) + 1;
+    cout << "\nYou got " << dice << " Point !! ";
+    score = score + dice;
+    cout << "Now you are at position " << score;
+    switch (score) 
+	{
+    case 98:
+        score = 28;
+        break;
+    case 95:
+        score = 24;
+        break;
+    case 92:
+        score = 51;
+        break;
+    case 83:
+        score = 19;
+        break;
+    case 73:
+        score = 1;
+        break;
+    case 69:
+        score = 33;
+        break;
+    case 64:
+        score = 36;
+        break;
+    case 59:
+        score = 17;
+        break;
+    case 55:
+        score = 7;
+        break;
+    case 52:
+        score = 11;
+        break;
+    case 48:
+        score = 9;
+        break;
+    case 46:
+        score = 5;
+        break;
+    case 44:
+        score = 22;
+        break;
+    case 8:
+        score = 26;
+        break;
+    case 21:
+        score = 82;
+        break;
+    case 43:
+        score = 77;
+        break;
+    case 50:
+        score = 91;
+        break;
+    case 54:
+        score = 93;
+        break;
+    case 62:
+        score = 96;
+        break;
+    case 66:
+        score = 87;
+        break;
+    case 80:
+        score = 100;
+    }
+}
Flag notifications
class Wrapper {
    /**
     * Definition for singly-linked list.
     * public class ListNode {
     *     int val;
     *     ListNode next;
     *     ListNode(int x) { val = x; }
     * }
     */
    
    public static int[] stringToIntegerArray(String input) {
        input = input.trim();
        input = input.substring(1, input.length() - 1);
        if (input.length() == 0) {
          return new int[0];
        }
    
        String[] parts = input.split(",");
        int[] output = new int[parts.length];
        for(int index = 0; index < parts.length; index++) {
            String part = parts[index].trim();
            output[index] = Integer.parseInt(part);
        }
        return output;
    }
    
    public static ListNode stringToListNode(String input) {
        // Generate array from the input
        int[] nodeValues = stringToIntegerArray(input);
    
        // Now convert that list into linked list
        ListNode dummyRoot = new ListNode(0);
        ListNode ptr = dummyRoot;
        for(int item : nodeValues) {
            ptr.next = new ListNode(item);
            ptr = ptr.next;
        }
        return dummyRoot.next;
    }
    
    public static void prettyPrintLinkedList(ListNode node) {
      while (node != null && node.next != null) {
          System.out.print(node.val + "->");
          node = node.next;
      }
    
      if (node != null) {
        System.out.println(node.val);
      } else {
        System.out.println("Empty LinkedList");
      }
    }
}

public class MainClass {
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        String line;
        while ((line = in.readLine()) != null) {
            ListNode node = Wrapper.stringToListNode(line);
            Wrapper.prettyPrintLinkedList(node);
        }
    }
}
(function(){/* 
 
 Copyright The Closure Library Authors. 
 SPDX-License-Identifier: Apache-2.0 
*/ 
function aa(a)
{var b=0;return function()
{return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var
ba="function"==typeof Object.defineProperties?
Object.defineProperty:function(a,b,c)
{if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a}; 
function ca(a){a=["object"==typeof
globalThis&&globalThis,a,"object"==typeof
window&&window,"object"==typeof self&&self,
"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];
if(c&&c.Math==Math)return c}
throw Error("Cannot find global object");
}var da=ca(this),ea="function"===typeof
Symbol&&"symbol"===typeof Symbol("x"),
k={},fa={};function t(a,b){var c=fa[b];
if(null==c)return a[b];c=a[c];return void 0!==c?c:a[b]} 
function u(a,b,c){if(b)a:{var d=a.split(".");
a=1===d.length;var e=d[0],f;!a&&e in 
k?f=k:f=da;for(e=0;e<d.length-1;e++){var g=d[e];if(!(g in 
f))break a;f=f[g]}d=d[d.length-1];c=ea&&"es6"===c?f[d]:null;
b=b(c);null!=b&&(a?ba(k,d,{configurable:!0,writable:!0,
value:b}):b!==c&&(void 0===fa[d]&&(a=1E9*Math.random()>>>0,
fa[d]=ea?da.Symbol(d):"$jscp$"+a+"$"+d),
ba(f,fa[d],{configurable:!0,writable:!0,value:b})))}} 
u("Symbol",function(a){function b(f){if(this instanceof
b)throw new TypeError("Symbol is not a constructor");
return new
c(d+(f||"")+"_"+e++,f)}function c(f,g){this.g=f;ba(this,"description",

{configurable:!0,writable:!0,value:g})}if(a)return

a;c.prototype.toString=function(){return this.g};var
d="jscomp_symbol_"+(1E9*Math.random()>>>0)+"_",e=0;return b},"es6"); 
u("Symbol.iterator",function(a){if(a)return a;
a=(0,k.Symbol)("Symbol.iterator");
for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array"
.split(" "),c=0;c<b.length;c++){var d=da[b[c]];
"function"===typeof d&&"function"!=typeof
d.prototype[a]&&ba(d.prototype,a,{configurable:!0,writable:!0,value:function()
{return ha(aa(this))}})}return a},"es6"); 
function ha(a){a={next:a};a[t(k.Symbol,"iterator")]=function()
{return this};return a}var ka="function"==typeof
Object.create?Object.create:function(a){function
b(){}b.prototype=a;return new b},la;if(ea&&
"function"==typeof Object.setPrototypeOf)la=Object.
setPrototypeOf;else{var ma;a:{var na={a:!0},oa={};try{oa.__proto__=na;ma=oa.a;break 
a}catch(a){}ma=!1}la=ma?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw
new TypeError(a+" is not extensible");return a}:null}var pa=la; 
u("String.prototype.endsWith",function(a)
{return a?a:function(b,c){if(null==this)throw 
new TypeError("The 'this' value for String.prototype.endsWith must not be null or undefined");
if(b instanceof RegExp)throw new TypeError("First argument to String.prototype.endsWith must not be a regular expression");
void 0===c&&(c=this.length);c=Math.max(0,Math.min(c|0,this.length));
for(var d=b.length;0<d&&0<c;)if(this[--c]!=b[--d])return!1;
return 0>=d}},"es6");u("globalThis",function(a){return a||da},"es_2020"); 
function qa(a,b){a instanceof String&&(a+="");var c=0,d=!1,e={next:function()
{if(!d&&c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}
d=!0;return{done:!0,value:void 0}}};
e[t(k.Symbol,"iterator")]=function(){return e};return
e}u("Array.prototype.values",
function(a){return a?a:function()
{return qa(this,function(b,c){return c})}},"es8");
u("Array.prototype.keys",
function(a){return a?a:function()
{return qa(this,function(b){return b})}},"es6"); 
u("Object.values",function(a)
{return a?a:function(b){var c=[],d;for(d 
in b)Object.prototype.hasOwnProperty.call(b,d)&&c.
push(b[d]);return c}},"es8");var x=this||self;
function ra(a,b)
{function c(){}c.prototype=b.prototype;a.K=b.prototype;a.prototype=new 
c;a.prototype.constructor=a;a.Y=function(d,e,f)
{for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];
return b.prototype[e].apply(d,g)}}function sa(a){return a};
function ta(a){a=parseFloat(a);
return isNaN(a)||1<a||0>a?0:a};
function y(a){if(Error.captureStackTrace)
Error.captureStackTrace(this,y);
else
{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))
}
ra(y,Error);y.prototype.name="CustomError";
function ua(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");y.
call(this,c+a[d])}ra(ua,y);ua.prototype.name="AssertionError";
function A(a,b){this.h=a===va&&b||
"";this.i=wa}A.prototype.l=!0;A.prototype.g=function(){return this.h};
function xa(a){return a instanceof
A&&a.constructor===A&&a.i===wa?a.h:"type_error:Const"}var
wa={},va={};var ya=Array.prototype.indexOf?
function(a,b)
{return Array.prototype.indexOf.call(a,b,void 0)}:
function(a,b){if("string"===typeof a)return"string"!==typeof
b||1!=b.length?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)
return c;return-1},za=Array.prototype.some?
function(a,b){return Array.prototype.some.call(a,b,void 0)}:
function(a,b){for(var c=a.length,d="string"===typeof a?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call
(void 0,d[e],e,a))return!0;return!1};var Aa={area:!0,base:!0,br:!0,col:!0,
command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};var Ba;
function Ca(){if(void 0===Ba){var a=null,b=x.trustedTypes;if(b&&b.createPolicy)

{try{a=b.createPolicy("goog#html",{createHTML:sa,createScript:sa,createScriptURL:sa})
}catch(c){x.console&&x.console.error(c.message)}Ba=a}else Ba=a}return Ba};
function C(a,b){this.i=b===Fa?a:""}C.prototype.l=!0;C.prototype.g=
function(){return this.i.toString()};C.prototype.A=!0;C.prototype.h=
function(){return 1};C.prototype.toString=function(){return this.i+""};
function Ga(a){return a instanceof C&&a.constructor===C?a.i:"type_error:TrustedResourceUrl"}var
Ha=/^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/,Fa={};
function Ia(a){var b=Ca();a=b?b.createScriptURL(a):a;return new C(a,Fa)} 
function Ja(a,b,c){if(null==c)return b;if("string"===typeof c)return c?a+encodeURIComponent(c):"";
for(var d in c)if(Object.prototype.hasOwnProperty.call
(c,d)){var e=c[d];e=Array.isArray(e)?e:
[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),
b+=(b.length>a.length?"&":"")+encodeURIComponent(d)
+"="+encodeURIComponent(String(g)))}}return b};function Ka(a){if(!La.test(a))
return; 
function Wa(a){if(a instanceof D)return a;a="object"==typeof
a&&a.l?a.g():String(a);Va.test(a)?a=ne
D(a,Sa):(a=String(a),a=a.replace(/(%0A|%0D)/g,""),
a=a.match(Ua)?new D(a,Sa):null);return a}var Sa={},Xa=new D("about:invalid#zClosurez",Sa);var
Ya={};
function E(a,b){this.h=b===Ya?a:"";this.l=!0}E.prototype.g=
function(){return this.h};E.prototype.toString=
function(){return this.h.toString()};var Za=new E("",Ya);  
function eb(a){for(var b=!0,c=/^[-_a-zA-Z0-9]$/,d=0;d<a.length;d++){var e=a.charAt(d);if("]"==e){if(b)
return!1;b=!0}else if("["==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b} 

 a)}})(window,navigator,document);}).call(this);
 
    }
  ],
  "prefer_related_applications": true,
  "related_applications": [
    {
      "platform": "play",
      "id": "com.citiuat"
    }, {
    "platform": "itunes",{
  "name": "Citi bank",
  "gcm_sender_id": "888803791909",

  "name": "Citi India",
  "short_name": "Citi India",
  "icons": [
    {
      "src": "launcher-icon-0-75x.png",
      "sizes": "36x36",
      "type": "image/png"
    },
    {
      "src": "launcher-icon-1x.png",
      "sizes": "48x48",
      "type": "image/png"
    },
    {
      "src": "launcher-icon-1-5x.png",
      "sizes": "72x72",
      "type": "image/png"
    },
    {
      "src": "launcher-icon-2x.png",
      "sizes": "96x96",
      "type": "image/png"
    },
    {
      "src": "launcher-icon-3x.png",
      "sizes": "144x144",
      "type": "image/png"
    },
    {
      "src": "launcher-icon-4x.png",
      "sizes": "192x192",
      "type": "image/png"
    "url": "https://itunes.apple.com/in/app/citibank-in/id467987820"
  }
  ],
  "start_url": "./index.htm",
  "display": "standalone"
}

