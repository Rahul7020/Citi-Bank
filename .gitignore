#include <iostream>
using namespace std;

class Check
{
  private:
    int i;
  public:
    Check(): i(3) {  }
    Check operator -- ()
    {
        Check temp;
        temp.i = --i;
        return temp;
    }

    // Notice int inside barcket which indicates postfix decrement.
    Check operator -- (int)
    {
        Check temp;
        temp.i = i--;
        return temp;
    }

    void Display()
    { cout << "i = "<< i <<endl; }
};

int main()
{
    Check obj, obj1;    
    obj.Display(); 
    obj1.Display();

    // Operator function is called, only then value of obj is assigned to obj1
    obj1 = --obj;
    obj.Display();
    obj1.Display();

    // Assigns value of obj to obj1, only then operator function is called.
    obj1 = obj--;
    obj.Display();
    obj1.Display();

    return 0;
}
+#include<iostream.h>
+#include<conio.h>
+#include<stdlib.h>
+#include<stdio.h>
+#include<time.h>
 
-# Node artifact files
-node_modules/
-dist/
+void draw_line(int n, char ch);
+void board();
+void gamescore(char name1[], char name2[], int p1, int p2);
+void play_dice(int & score);
 
-# Compiled Java class files
-*.class
+void main()
+{
+    int player1 = 0, player2 = 0, lastposition;
+    char player1name[80], player2name[80];
+    clrscr();
+    randomize();
+    draw_line(50, '=');
+    cout << "\n\n\n\n\t\tSNAKE LADDER GAME\n\n\n\n";
+    draw_line(50, '=');
+    cout << "\n\n\nEnter Name of player 1 :";
+    gets(player1name);
+    cout << "\n\n\Enter Name of player 2 :";
+    gets(player2name);
+    while (player1 <= 100 && player2 <= 100) 
+	{
+        board();
+        gamescore(player1name, player2name, player1, player2);
+        cout << "\n\n--->" << player1name << " Now your Turn >> Press any key to play ";
+        getch();
+        lastposition = player1;
+        play_dice(player1);
+        if (player1 < lastposition)
+            cout << "\n\aOops!! Snake found !! You are at postion " << player1 << "\n";
+        else if (player1 > lastposition + 6)
+            cout << "\nGreat!! you got a ladder !! You are at position " << player1;#
+        include < iostream.h >
+            cout << "\n\n--->" << player2name << " Now your Turn >> Press any key to play ";
+        getch();
+        lastposition = player2;
+        play_dice(player2);
+        if (player2 < lastposition)
+            cout << "\n\n\aOops!! Snake found !! You are at position " << player2 << "\n";
+        else if (player2 > lastposition + 6)
+            cout << "\n\nGreat!! you got a ladder !! You are at position " << player2 << "\n";
+        getch();
+    }
+    clrscr();
+    cout << "\n\n\n";
+    draw_line(50, '+');
+    cout << "\n\n\t\tRESULT\n\n";
+    draw_line(50, '+');
+    cout << endl;
+    gamescore(player1name, player2name, player1, player2);
+    cout << "\n\n\n";
+    if (player1 >= player2)
+        cout << player1name << " !! You are the winner of the game\n\n";
+    else
+        cout << player2name << " !! You are the winner of the game\n\n";
+    draw_line(50, '+');
+    getch();
+}
+void draw_line(int n, char ch) 
+{
+    for (int i = 0; i < n; i++)
+        cout << ch;
+}
 
-# Compiled Python bytecode
-*.py[cod]
+void board() 
+{
+    clrscr();
+    cout << "\n\n";
+    draw_line(50, '-');
+    cout << "\n\t\tSNAKE AT POSITION\n";
+    draw_line(50, '-');
+    cout << "\n\tFrom 98 to 28 \n\tFrom 95 to 24\n\tFrom 92 to 51\n\tFrom 83 to 19\n\tFrom 73 to 1\n\tFrom 69 to 33\n\tFrom 64 to 36\n\tFrom 59 to 17\n\tFrom 55 to 7\n\tFrom 52 to 11\n\tFrom 48 to 9\n\tFrom 46 to 5\n\tFrom 44 to 22\n\n";
+    draw_line(50, '-');
+    cout << "\n\t\t LADDER AT POSITION\n";
+    draw_line(50, '-');
+    cout << "\n\tFrom 8 to 26\n\tFrom 21 to 82\n\tFrom 43 to 77\n\tFrom 50 to 91\n\tFrom 62 to 96\n\tFrom 66 to 87\n\tFrom 80 to 100\n";
+    draw_line(50, '-');
+    cout << endl;
+}
 
-# Log files
-*.log
-
-# Package files
-*.jar
-
-target/
-dist/
-
-# JetBrains IDE
-.idea/
-
-# Unit test reports
-TEST*.xml
-
-# Generated by MacOS
-.DS_Store
-
-# Generated by Windows
-Thumbs.db
-
-# Applications
-*.app
-*.exe
-*.war
-
-# Large media files
-*.mp4
-*.tiff
-*.avi
-*.flv
-*.mov
-*.wmv
+void gamescore(char name1[], char name2[], int p1, int p2) 
+{
+    cout << "\n";
+    draw_line(50, '~');
+    cout << "\n\t\tGAME STATUS\n";
+    draw_line(50, '~');
+    cout << "\n\t--->" << name1 << " is at position " << p1 << endl;
+    cout << "\t--->" << name2 << " is at position " << p2 << endl;
+    draw_line(50, '_');
+    cout << endl;
+}
+void play_dice(int & score) 
+{
+    int dice;
+    dice = random(6) + 1;
+    cout << "\nYou got " << dice << " Point !! ";
+    score = score + dice;
+    cout << "Now you are at position " << score;
+    switch (score) 
+	{
+    case 98:
+        score = 28;
+        break;
+    case 95:
+        score = 24;
+        break;
+    case 92:
+        score = 51;
+        break;
+    case 83:
+        score = 19;
+        break;
+    case 73:
+        score = 1;
+        break;
+    case 69:
+        score = 33;
+        break;
+    case 64:
+        score = 36;
+        break;
+    case 59:
+        score = 17;
+        break;
+    case 55:
+        score = 7;
+        break;
+    case 52:
+        score = 11;
+        break;
+    case 48:
+        score = 9;
+        break;
+    case 46:
+        score = 5;
+        break;
+    case 44:
+        score = 22;
+        break;
+    case 8:
+        score = 26;
+        break;
+    case 21:
+        score = 82;
+        break;
+    case 43:
+        score = 77;
+        break;
+    case 50:
+        score = 91;
+        break;
+    case 54:
+        score = 93;
+        break;
+    case 62:
+        score = 96;
+        break;
+    case 66:
+        score = 87;
+        break;
+    case 80:
+        score = 100;
+    }
+}
@media only screen and (min-width: 780px){
  .ucVirtualAssistant .virtualAssistant .box {
    background-color: #0059b3;
    /* height: 572px; */
    height: 585px;
    margin-top: -40px;
    padding: 3px;
    right: 0px;
    position: fixed;
    /* top: 48%; */
    bottom: 2%;
    width: 500px;
	z-index:1000;
	border-radius: 10px;
}
#va_trigger{
    right: 0px;
   /* height: 43px;*/
    top: 0px;
    /* z-index: 1; */
        width: 426px;
		
}
.ucVirtualAssistant .virtualAssistant {
    cursor: pointer;
    margin-top: -77px;
    position: fixed;
    right: 11px;
    top:111%;
    width: 497px;
    /* height: 20px; */
    z-index: 100;
}
#va_trigger {
    padding-top: 1px !important;
    top: -1px !important;
    background: linear-gradient(#144E87, #42BCE5 70%)!important;
	height: 72px;
}
}
#va_trigger h3 {
    top: -4px;
    position: absolute;
    margin-left: 41%;
    margin-right: 41%;
	color: white;

}

div.icon-launch {
    bottom: 20px;
    right: 3%;
    position: absolute;
    height: 95px;
    width: 95px;
	background-size: 100% 100%;
    background-image: url(../images/avatar.png);
	cursor: pointer;
}
.avtr-logo {
    float: right;
    display: block !important;
    margin: 0px 0 0px 0px !important;
    background: url() no-repeat !important;
    background-size: 66px 69px !important;
    width: 66px;
    height: 69px;
    box-shadow: none !important;
}

.gov-logo {
    float: left;
    display: block !important;
    margin: 10px 0 10px 1px !important;
    background: url() no-repeat !important;
    background-size: 49px 58px !important;
    width: 64px;
    height: 52px;
    position: static !important;
    box-shadow: none !important;
}

@media only screen and (max-width: 779px){
.ucVirtualAssistant .virtualAssistant {
    cursor: pointer;
    /* margin-top: -77px; */
    /* position: fixed; */
    right: 11px;
    top: 111%;
    width: 497px;
    /* height: 20px; */
    z-index: 100;
}


.ucVirtualAssistant .virtualAssistant .box {
    background-color: #00aaf3;
    /* height: 572px; */
    height: 100%;
    /* margin-top: -40px; */
    padding: 3px;
    position: fixed;
    right: 0px;
	bottom: 8%;
    /* top: 48%; */
    width: 100%;
	z-index:1000;
}

#va_trigger {
    right: 0px;
    /* height: 43px; */
    top: 0px;
    /* z-index: 1; */
    width: 100%;
}



#va_trigger {
    padding-top: 1px !important;
    top: -1px !important;
    background: linear-gradient(#144E87, #42BCE5 70%)!important;
    height: 12%;
}


 #vaDiv{
    display: block;
    height: 100%;
}

#botframe{
height : 100%;
width : 100%;
}
}img.logo {display:block;margin:20px auto;border-radius:50%;height:114px;position:fixed;bottom:20px;right:31px;}
#vabox{
   display:none;
   width:100%;
   height:100%;
   position: fixed;
   bottom:0;
   border-radius:10px;
   background-color: #cce6ff;
}
#botdiv{
   display: block; 
   height:100%; 
   width:100%; 
   border-radius:10px;
   background-color: #cce6ff;
}
@media only screen and (min-width:1200px){
   #vabox{
       display:none;
       width:400px;
       height:600px;
       position: fixed;
       right:3%;
       bottom:0;
       border-radius:10px;
       background-color: #cce6ff;
   }
   #botdiv{
       display: block; 
       height:600px; 
       width:400px; 
       border-radius:10px;
       background-color: #cce6ff;
   }
}
@media only screen and (min-width:650px) and (max-width:1200px){
#vabox{
       display:none;
       width:400px;
       height:580px;
       position: fixed;
       right:3%;
       bottom:0;
       border-radius:10px;
       background-color: #cce6ff;
   }
   #botdiv{
       display: block; 
       height:580px; 
       width:400px; 
       border-radius:10px;
       background-color: #cce6ff;
   }

}
Flag notifications@media only screen and (min-width: 780px){
  .ucVirtualAssistant .virtualAssistant .box {
    background-color: #0059b3;
    /* height: 572px; */
    height: 585px;
    margin-top: -40px;
    padding: 3px;
    right: 0px;
    position: fixed;
    /* top: 48%; */
    bottom: 2%;
    width: 500px;
	z-index:1000;
	border-radius: 10px;
}
#va_trigger{
    right: 0px;
   /* height: 43px;*/
    top: 0px;
    /* z-index: 1; */
        width: 426px;
		
}
.ucVirtualAssistant .virtualAssistant {
    cursor: pointer;
    margin-top: -77px;
    position: fixed;
    right: 11px;
    top:111%;
    width: 497px;
    /* height: 20px; */
    z-index: 100;
}
#va_trigger {
    padding-top: 1px !important;
    top: -1px !important;
    background: linear-gradient(#144E87, #42BCE5 70%)!important;
	height: 72px;
}
}
#va_trigger h3 {
    top: -4px;
    position: absolute;
    margin-left: 41%;
    margin-right: 41%;
	color: white;

}

div.icon-launch {
    bottom: 20px;
    right: 3%;
    position: absolute;
    height: 95px;
    width: 95px;
	background-size: 100% 100%;
    background-image: url(../images/avatar.png);
	cursor: pointer;
}
.avtr-logo {
    float: right;
    display: block !important;
    margin: 0px 0 0px 0px !important;
    background: url() no-repeat !important;
    background-size: 66px 69px !important;
    width: 66px;
    height: 69px;
    box-shadow: none !important;
}

.gov-logo {
    float: left;
    display: block !important;
    margin: 10px 0 10px 1px !important;
    background: url() no-repeat !important;
    background-size: 49px 58px !important;
    width: 64px;
    height: 52px;
    position: static !important;
    box-shadow: none !important;
}

@media only screen and (max-width: 779px){
.ucVirtualAssistant .virtualAssistant {
    cursor: pointer;
    /* margin-top: -77px; */
    /* position: fixed; */
    right: 11px;
    top: 111%;
    width: 497px;
    /* height: 20px; */
    z-index: 100;
}


.ucVirtualAssistant .virtualAssistant .box {
    background-color: #00aaf3;
    /* height: 572px; */
    height: 100%;
    /* margin-top: -40px; */
    padding: 3px;
    position: fixed;
    right: 0px;
	bottom: 8%;
    /* top: 48%; */
    width: 100%;
	z-index:1000;
}

#va_trigger {
    right: 0px;
    /* height: 43px; */
    top: 0px;
    /* z-index: 1; */
    width: 100%;
}



#va_trigger {
    padding-top: 1px !important;
    top: -1px !important;
    background: linear-gradient(#144E87, #42BCE5 70%)!important;
    height: 12%;
}


 #vaDiv{
    display: block;
    height: 100%;
}

#botframe{
height : 100%;
width : 100%;
}
}
